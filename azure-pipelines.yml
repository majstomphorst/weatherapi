#trigger:
#- master
#
#pool:
#  vmImage: ubuntu-latest
#
#variables:
#  buildConfiguration: 'Release'
#
#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'
#
#- task: UseDotNet@2
#  inputs:
#    version: '6.x'
#
#- task: DotNetCoreCLI@2
#  displayName: 'dotnet build'
#  inputs:
#    command: 'publish'
#    configuration: $(buildConfiguration)
#    
#- task: DotNetCoreCLI@2
#  inputs:
#    command: publish
#    publishWebProjects: True
#    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#    zipAfterPublish: True
#  
#  # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
#- task: PublishPipelineArtifact@1
#  inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)'
#    artifactName: 'myWebsiteName'


trigger:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    inputs:
      version: '6.x'

#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration)'

  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    inputs:
      command: publish
      publishWebProjects: false
      projects: './weatherapi.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: 'publish artifacts'

